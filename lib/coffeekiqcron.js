// Generated by CoffeeScript 1.4.0
(function() {
  var CoffeeKiq, CoffeeKiqCron,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  CoffeeKiq = require('coffeekiq').CoffeeKiq;

  CoffeeKiqCron = (function(_super) {

    __extends(CoffeeKiqCron, _super);

    function CoffeeKiqCron() {
      return CoffeeKiqCron.__super__.constructor.apply(this, arguments);
    }

    CoffeeKiqCron.prototype.find = function(name, cb) {
      var result;
      if (!this.connected) {
        this.connect();
      }
      return result = this.redis_client.hgetall("cron_job:" + name, cb);
    };

    CoffeeKiqCron.prototype.enqueue = function(name) {
      var self;
      self = this;
      this.find(name, function(err, result) {
        var msg, queue;
        if (err == null) {
          msg = JSON.parse(result.message);
          if (result.queue != null) {
            queue = result.queue;
          } else {
            queue = 'default';
          }
          return coffeekiq.perform(queue, result.klass, msg.args);
        } else {
          return console.log(err);
        }
      });
      return "trying to enqueue " + name;
    };

    return CoffeeKiqCron;

  })(CoffeeKiq);

  exports.CoffeeKiqCron = CoffeeKiqCron;

}).call(this);
